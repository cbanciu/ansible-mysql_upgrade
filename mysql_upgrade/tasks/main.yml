---
- name: Fail if not RHEL
  fail: msg="This playbook only runs on RHEL like servers."
  when: ansible_os_family != "RedHat"

- name: Display rollback information
  include: rollback.yml

- name: Create ticket folder
  file:
    path: "/home/rack/{{ ticket_no }}"
    state:  directory

- name: Get service name
  shell: rpm -qa | egrep -i "maria|mysql|percona" | grep server | cut -d- -f1
  register: service_name
  tags: mysql_upgrade

- name: Set MariaDB name on RHEL 6
  set_fact:
    mysql_service_name: "mysql"
  when: service_name.stdout[0:5]|lower == "maria" and ansible_distribution_major_version == "6"
  tags: mysql_upgrade

- name: Set MariaDB name on RHEL 7
  set_fact:
    mysql_service_name: "mariadb.service"
  when: service_name.stdout[0:5]|lower == "maria" and ansible_distribution_major_version == "7"
  failed_when: False
  tags: mysql_upgrade

- name: Set Percona name
  set_fact:
    mysql_service_name: "mysql"
  when: ansible_os_family == "RedHat" and service_name.stdout[0:7]|lower == "percona"
  tags: mysql_upgrade

- name: Set MySQL name
  set_fact:
    mysql_service_name: "mysqld"
  when: ansible_os_family == "RedHat" and service_name.stdout[0:5]|lower == "mysql"
  tags: mysql_upgrade

- name: Backup yum.conf and remove MySQL exclusions
  shell: /bin/cp -f /etc/yum.conf /etc/yum.conf.ansible && sed -i 's/mysql[^ \s]*\|percona[^ \s]*\|maria[^ \s]*//gI' /etc/yum.conf

- name: Install MySQL Python on RHEL
  yum:
    name: MySQL-python
    state: present
  when: ansible_os_family == "RedHat"
  tags: mysql_upgrade

- name: Install Python SSL on RHEL 5
  yum:
    name: python-ssl
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "5"

- name: Get MySQL info
  mysql_variables:
    variable: "{{ item }}"
  with_items:
    - datadir
    - version
    - tmpdir
  register: mysql_vars
  tags: mysql_upgrade

- name: Set MySQL version
  set_fact:
    mysql_version: "{{ mysql_vars['results'][1]['msg'][0][1] }}"
  tags: mysql_upgrade

- fail: "You are running the latest MySQL version"
  when: mysql_vars['results'][1]['msg'][0][1].startswith('5.7') or mysql_vars['results'][1]['msg'][0][1].startswith('10.1')
  tags: mysql_upgrade

- name: Stop MySQL for backups
  service:
    name: "{{ mysql_service_name }}"
    state: stopped
  register: mysql_status
  when: backup_method|lower == "rsync"
  tags: mysql_upgrade

- name: Backup using rsync
  shell: rsync -a {{ mysql_vars['results'][0]['msg'][0][1] }} {{ mysql_vars['results'][0]['msg'][0][1][:-1] }}.$(echo $(date +"%y%m%d-%H%M"))
  when: mysql_status.changed
  async: "{{ backup_time | default(10800, true) }}"
  poll: 10
  tags: mysql_upgrade

- name: Start MySQL
  service:
    name: "{{ mysql_service_name }}"
    state: started
  register: mysql_status
  when: mysql_status.changed
  tags: mysql_upgrade

- name: Backup using holland
  shell: holland bk
  when: backup_method|lower == "holland"
  async: "{{ backup_time | default(7200, true) }}"
  poll: 10
  tags: mysql_upgrade

- name: Download upgrade_mysql_config.py
  copy:
    src: upgrade_mysql_config.py
    dest: "/home/rack/{{ticket_no}}/upgrade_mysql_config.py"

- name: Upgrade MySQL
  include: mysql.yml
  when: service_name['stdout_lines'][0][0:5] == 'mysql'
  tags: mysql_upgrade

- name: Upgrade Percona
  include: percona.yml
  when: service_name['stdout_lines'][0]|lower == 'percona'
  tags: mysql_upgrade

- name: Upgrade MariaDB
  include: maria.yml
  when: service_name['stdout_lines'][0][0:5]|lower == 'maria'
  tags: mysql_upgrade

- name: Restore yum.conf
  shell: /bin/mv -f /etc/yum.conf.ansible /etc/yum.conf

- name: Display rollback information
  include: rollback.yml